/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ../public/model.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/model.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.556, 0]}>
        <primitive object={nodes.spine} />
        <skinnedMesh geometry={nodes.torso.geometry} material={materials.Material} skeleton={nodes.torso.skeleton} />
      </group>
      <PerspectiveCamera makeDefault={true} far={100} near={0.1} fov={22.895} position={[7.359, 4.958, 6.926]} rotation={[-0.627, 0.71, 0.441]} />
      <spotLight intensity={2119.705} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[-0.022, 4.249, 0.009]} rotation={[-Math.PI / 2, 0, 0]} scale={[1, 1, 0.5]} target={nodes.Spot.target}>
        <primitive object={nodes.Spot.target} position={[0, 0, -1]} />
      </spotLight>
    </group>
  )
}

useGLTF.preload('/model.glb')
